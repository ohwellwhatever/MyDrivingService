# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '75f5bbf3-21b8-4d66-b774-f62c7d72c01f'
  imageRepository: 'devopsoh/api-user-java'
  containerRegistry: 'openhacka2k61f74acr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/apis/user-java/Dockerfile'
  tag: '$(Build.BuildId)'

stages:

- stage: Build
  jobs:
  - task: Maven@3
    inputs:
      mavenPomFile: 'apis/user-java/pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'

- stage: ACR
  dependsOn: Build
  jobs:
  - task: Docker@2
    inputs:
      command: buildAndPush
      repository: $(imageRepository)
      dockerfile: $(dockerfilePath)
      containerRegistry: $(dockerRegistryServiceConnection)
      tags: |
        latest
        $(tag)

- stage : Staging
  dependsOn: ACR
  jobs:
  - task: AzureRmWebAppDeployment@4
    environment: release
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'OTA-PRD-158(4631b064-cd36-4785-99b7-195ab94da98b)'
      appType: 'webAppContainer'
      WebAppName: 'openhacka2k61f74userjava'
      deployToSlotOrASE: true
      ResourceGroupName: 'openhacka2k61f74rg'
      SlotName: 'staging'
      DockerNamespace: $(containerRegistry)
      DockerRepository: $(imageRepository)
      DockerImageTag: '$(Build.BuildId)'